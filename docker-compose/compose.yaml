services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  graylog:
    image: graylog/graylog:4.2
    environment:
      - GRAYLOG_PASSWORD_SECRET=your_password_secret
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      - GRAYLOG_WEB_ENDPOINT_URI=http://graylog:9000/api
      - GRAYLOG_CONTENT_PACKS_LOADER_ENABLED=true
      - GRAYLOG_CONTENT_PACKS_AUTO_INSTALL=default-input.json
      - GRAYLOG_CONTENT_PACKS_DIR=data/contentpacks
      - GRAYLOG_HTTP_BIND_ADDRESS=0.0.0.0:9000
    ports:
      - "9000:9000"
      - "12201:12201/udp"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/api" ]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - ./contentpacks/:/usr/share/graylog/data/contentpacks/

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m

  mongo:
    image: mongo:4.2

#  directories_legacy:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    environment:
#      - ASPNETCORE_ENVIRONMENT=Development
#      - GRAYLOG_HOST=graylog
#      - GRAYLOG_PORT=12201
#    ports:
#      - "5000:8080"
#    depends_on:
#      - graylog
#      - postgres

volumes:
  postgres_data:
  es_data:
  mongo_data: